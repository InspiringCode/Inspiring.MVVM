<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>Define a DependencyProperty</Title>
      <Author>Microsoft Corporation</Author>
      <Description>Code snippet for a property using DependencyProperty as the backing store</Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>propdp</Shortcut>
    </Header>
    <Snippet>
      <Declarations>
        <Literal Editable="true">
          <ID>type</ID>
          <ToolTip>Property Type</ToolTip>
          <Default>int</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>property</ID>
          <ToolTip>Property Name</ToolTip>
          <Default>MyProperty</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>ownerclass</ID>
          <ToolTip>The owning class of this Property.  Typically the class that it is declared in.</ToolTip>
          <Default>ownerclass</Default>
          <Function>ClassName()				</Function>
        </Literal>
        <Literal Editable="true">
          <ID>defaultvalue</ID>
          <ToolTip>The default value for this property.</ToolTip>
          <Default>0</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp"><![CDATA[public static readonly DependencyProperty $property$Property = DependencyProperty.Register(
			"$property$",
			typeof($type$),
			typeof($ownerclass$)
		);

		public $type$ $property$
		{
			get { return ($type$)GetValue($property$Property); }
			set { SetValue($property$Property, value); }
		}

		$end$]]></Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>