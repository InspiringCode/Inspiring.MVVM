//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inspiring.Mvvm {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ExceptionTexts {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ExceptionTexts() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Inspiring.Mvvm.ExceptionTexts", typeof(ExceptionTexts).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No localization was found for the enum value &apos;{0}.{1}&apos;. Add an entry with a key of &apos;{0}_{1}&apos; and the localized display value to a resource file (.resx) and call &apos;EnumLocalized.AddLocalizationResource&apos; passing the &apos;ResourceManager&apos; of the resource file (which you can get using &apos;&lt;resource file name&gt;.ResourceManager&apos;)..
        /// </summary>
        internal static string EnumLocalizationNotFound {
            get {
                return ResourceManager.GetString("EnumLocalizationNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;Execute&apos; cannot be called if no actual command implementation is registered. Make sure you call &apos;Execute&apos; only if &apos;CanExecute&apos; returns true..
        /// </summary>
        internal static string ExecuteCalledWithoutActualCommand {
            get {
                return ResourceManager.GetString("ExecuteCalledWithoutActualCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The lookup collection does not contain a VM for the source item: &apos;{0}&apos;..
        /// </summary>
        internal static string LookupViewModelNotFound {
            get {
                return ResourceManager.GetString("LookupViewModelNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No value..
        /// </summary>
        internal static string NoValue {
            get {
                return ResourceManager.GetString("NoValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to T must be an enumeration..
        /// </summary>
        internal static string TypeNotEnum {
            get {
                return ResourceManager.GetString("TypeNotEnum", resourceCulture);
            }
        }
    }
}
